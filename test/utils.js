
a.split(' ').reduce((c, b)=>c.concat(b.split('M').join(' M ')), []).join(' ')

a = "M55.996 33.59c0-1.18.055-2.403-.148-3.57-.672-3.825-4.77-5.047-8.164-4.614a7.46 7.46 0 0 0-2.668.832 5.51 5.51 0 0 0-.473-.726c-1.297-1.68-3.324-2.473-5.39-2.676a7.334 7.334 0 0 0-3.942.68c.074-5.051.121-10.106.11-15.157 0-1.617-.051-3.238-.727-4.742C33.8 1.844 32.195.73 30.312.344c-2.19-.45-4.597-.43-6.605.64-2.184 1.168-3.48 3.368-3.727 5.774-.21 1.941-.203 3.922-.265 5.875-.074 2.262-.133 4.531-.195 6.797-.473-2.754-.97-5.5-1.489-8.246-.664-3.43-2.293-6.649-6.125-7.036-3.508-.347-7.258 1.254-8.332 4.778-.808 2.629-.082 5.472.356 8.11.472 2.835.953 5.667 1.437 8.5.711 4.194 1.426 8.386 2.14 12.573a6.803 6.803 0 0 0-3.94 2.723C2.358 42.496 1.534 44.492.89 46.43c-1.559 4.675-1.036 9.148 1.296 13.48C4.176 63.605 7.117 66.836 9.82 70a426.846 426.846 0 0 0 4.77 5.516v21.562c.015 1.02.84 1.84 1.867 1.856h30.332a1.883 1.883 0 0 0 1.867-1.856c-.062-6.535-.117-13.078-.172-19.621 0-.644-.004-1.289-.015-1.937 3.855-2.993 7.18-7.32 7.297-12.329.082-3.34.093-6.675.129-10.03.046-4.317.078-8.634.101-12.954 0-.082 0-.16.016-.246a2.586 2.586 0 0 0 0-.246v-.637c-.016-1.832-.008-3.656-.016-5.488zm-8.16-4.485c1.434-.265 3.953-.23 4.352 1.575.343 1.55.082 3.418.082 4.988 0 1.484-.004 2.969-.012 4.45a1.72 1.72 0 0 1-.996 1.523c-1.078.558-2.758.554-3.88.105a3.07 3.07 0 0 1-1.538-1.566 6.706 6.706 0 0 1-.11-.836v-8.29c.118-1.05.762-1.695 2.102-1.949zm-12.203-1.273a3.206 3.206 0 0 1 2.18-1.336c1.242-.121 2.84.184 3.69 1.156.571.653.497 1.223.497 2.051v7.485c0 1.94.344 4-1.82 4.988-1.79.82-4.992-.2-5.25-2.29l.199-11.175c.039-.086.09-.195.11-.227a6.16 6.16 0 0 1 .394-.652zM23.695 6.816c.285-1.824 1.938-3.058 3.907-3.043 1.199.02 2.734.032 3.418 1.008.683.977.57 2.395.574 3.567.015 6.03-.102 12.062-.184 18.09 0 .605-.133 8.695-.183 11.882l-.22-.086c-1.245-.453-2.542-.382-3.835-.382h-4.344c.18-9.72.317-19.454.746-29.176.047-.551.059-1.469.121-1.867zM7.254 9.641c.523-1.223 1.84-1.625 3.07-1.774 1.125-.133 2.145-.066 2.785.672.856.988 1.106 2.496 1.34 3.742.918 4.906 1.703 9.84 2.528 14.766.605 3.605 1.203 7.21 1.8 10.816H17.47c-2.07 0-4.168-.074-6.246-.054-1.403-8.106-2.895-16.204-4.118-24.336-.183-1.22-.351-2.657.149-3.832zm44.789 52.363c-.035 2.226-.328 3.836-1.559 5.89a17.324 17.324 0 0 1-4.668 5c-.933.692-1.101 1.36-1.093 2.383.02 2.196.043 4.395.062 6.594.04 4.45.082 8.902.121 13.352H18.32V76.027c0-.96.082-1.683-.55-2.515-1.926-2.543-4.243-4.856-6.297-7.301-3.145-3.734-6.75-7.664-7.688-12.61-.5-2.617.246-5.285 1.262-7.695.453-1.09.992-2.277 1.738-3.215.746-.933 1.668-1.113 2.79-1.136 3.624-.075 7.257 0 10.882 0h6.008c1.383 0 2.984-.262 4.152.629 2.238 1.703 1.547 5.109-.265 6.816-1.559 1.484-3.559 2.25-5.668 2.621-.766.133-7.778.316-10.075.316h-3.996c-2.402 0-2.406 3.711 0 3.711h8.25c.946 0 1.903 0 2.864-.046l.378.168c.665.316 1.317.664 1.965 1.035 1.649.968 3.297 2.156 4.414 3.726 1.387 1.953 1.493 4.371.832 6.617-.277.93-.664 1.82-1.156 2.657-.183.312-.387.61-.586.914l-.101.148c-.551.766-.621 1.766.097 2.492.645.66 2.008.778 2.637 0 3.125-3.847 4.492-9.796 1.813-14.218a15.292 15.292 0 0 0-4.297-4.45 13.174 13.174 0 0 0 3.086-1.402c2.789-1.758 4.847-4.61 4.945-7.812.95.324 1.941.52 2.945.578a6.59 6.59 0 0 0 5.262-2.203 6.573 6.573 0 0 0 2.875 1.59 8.86 8.86 0 0 0 5.39-.262c-.019 3.117-.05 6.234-.09 9.355-.023 2.492-.054 4.98-.093 7.469zM21.73 55.617c.07.031.102.043 0 0zm5.84 15.137c-.03.039-.058.078-.086.117a.534.534 0 0 1 .086-.117zm-.105.14c-.043.063-.035.047 0 0zm0 0"
const commands = 'cVhzSLlvHmsMaC'.split('');

const extractPieces = (value) => {
  const piece = parseFloat(value);
  if (isNaN(piece)) return '';
  if(value[0]=='.') value = `0${value}`;
  value = value.replace(`${piece}`, '');
  return `${ Math.round(piece) } ${extractPieces(value)}`.trim();
}

const spl = (path) => {
  commands.forEach(command=> {
    path = path.replaceAll(command, ` ${ command } `);
  });
  path = path.replaceAll('  ', ' ');
  return path.trim().split(' ').map(value => {
    if (isNaN(value)) {
      var floatPart = extractPieces(value);
      if (!floatPart) return value;
      return floatPart;
    }
    return Math.round(parseFloat(value));
  }).join(' ');
};